@model IEnumerable<DigitalFirmaClone.Models.APIClasses.GetSignature>

<div class="container-fluid d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
    <div class="d-flex align-items-center flex-wrap mr-1">
        <div class="d-flex align-items-baseline flex-wrap mr-5">
            <h5 class="text-dark font-weight-bold my-1 mr-5" style="color: #ce3d9d!important;">@ViewBag.Title</h5>
            <ul class="breadcrumb breadcrumb-transparent breadcrumb-dot font-weight-bold p-0 my-2 font-size-sm">
                <li class="breadcrumb-item">
                    <a href="" class="text-muted">@ViewBag.ParentCode</a>
                </li>
                <li class="breadcrumb-item">
                    <a href="" class="text-muted">@ViewBag.SubTitle</a>
                </li>
            </ul>
        </div>
    </div>
    <div class="d-flex align-items-center">
        <a class="btn btn-clean kt-margin-r-10 BackConfirmation">
            <i class="la la-arrow-left"></i>
            <span class="kt-hidden-mobile">Back</span>
        </a>
    </div>
</div>


<div class="d-flex flex-column-fluid">
    <!--begin::Container-->
    <div class="container">
        <a class="btn btn-primary" href="/Signature/CreateNew">New Signature</a>
    </div>
</div>




<div id="modal_datatable_local_source" class="">
    <table style="width:100%!important;" class="table table-striped- table-bordered table-hover table-checkable responsive no-wrap datatable">
        <thead>
            <tr>
                <th>State</th>
                <th>Name</th>
                <th>Date</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.attributes.sign_status</td>
                    <td>@item.attributes.file_name</td>
                    <td>@item.attributes.signed_at</td>
                    <td></td>
                </tr>
            }
        </tbody>
    </table>

</div>


<script src="~/Metronic1/assets/plugins/global/plugins.bundle.js" type="text/javascript"></script>
<script src="~/Metronic1/assets/js/scripts.bundle.js" type="text/javascript"></script>
<script src="~/Metronic1/assets/plugins/custom/datatables/datatables.bundle.js" type="text/javascript"></script>

<script type="text/javascript">


    jQuery(document).ready(function () {

        var table = $('.datatable').DataTable({

            "processing": true, // for show progress bar
            "serverSide": true, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "pageLength": 5,

            "ajax": {
                "url": "/PayRollUtilities/_GetAllShift",
                "type": "POST",
                "datatype": "json"
            },
            //Header Main CheckBox
            select: {
                style: 'multi',
                selector: 'td:first-child .kt-checkable',
            },
            headerCallback: function (thead, data, start, end, display) {
                thead.getElementsByTagName('th')[0].innerHTML = `
                    <label class="kt-checkbox kt-checkbox--single kt-checkbox--solid kt-checkbox--brand">
                        <input type="checkbox" value="" class="kt-group-checkable">
                        <span></span>
                    </label>`;
            },

            layout: {
                scroll: true,
                height: 550,
            },

            // Pagination settings
            dom: `<'row'<'col-sm-6 text-left'f><'col-sm-6 text-right'B>>
            <'row'<'col-sm-12'tr>>
            <'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7 dataTables_pager'lp>>`,

            //Print Buttons
            buttons: [

            ],

            //Assign 0 index to be check box
            columnDefs: [
                {
                    targets: 0,
                    orderable: false,
                    render: function (data, type, full, meta) {
                        return `
                        <label class="kt-checkbox kt-checkbox--single kt-checkbox--solid kt-checkbox--brand">
                            <input type="checkbox" value="" class="kt-checkable">
                            <span></span>
                        </label>`;
                    },
                },
            ],
            "columns": [
                { "data": "Id", "name": "Id", "autoWidth": true },
                { "data": "Id", "name": "Id", "autoWidth": true },
                { "data": "OutTimeString", "title": "OutTime", "name": "OutTimeString", "autoWidth": true },
                {
                    "data": "Id",
                    "render": function (data, type, row) {
                        var ConcatString = '<button value="TREE" title="VIEW" data-dismiss="modal" class="btn btn-elevate btn-pill btn-outline-info MarginRight TableOperations"><i class="la la-eye"></i></button> <input type="hidden" value="' + data + '" class="IdHidden" />';
                        return ConcatString;
                    },
                    "name": "Id", "autoWidth": true
                },
            ]
        });

        table.columns().eq(0).each(function (colIdx) {
            $('input', table.column(colIdx).footer()).on('keyup change', function () {
                table.column(colIdx)
                    .search(this.value)
                    .draw();
            });
        });

        //CheckBox Funtionality Assign
        table.on('change', '.kt-group-checkable', function () {
            var set = $(this).closest('table').find('td:first-child .kt-checkable');
            var checked = $(this).is(':checked');

            $(set).each(function () {
                if (checked) {
                    $(this).prop('checked', true);
                    table.rows($(this).closest('tr')).select();
                }
                else {
                    $(this).prop('checked', false);
                    table.rows($(this).closest('tr')).deselect();
                }
            });
        });

        //Range Input KeyPress Target
        $('#start, #end').keyup(function () {
            table.draw();
        });

        //Search Inputs In Form
        $('#kt_search').on('click', function (e) {
            e.preventDefault();
            var params = {};
            $('.kt-input').each(function () {
                var i = $(this).data('col-index');
                if (params[i]) {
                    params[i] += '|' + $(this).val();
                }
                else {
                    params[i] = $(this).val();
                }
            });
            $.each(params, function (i, val) {
                // apply search params to datatable
                table.column(i).search(val ? val : '', false, false);
            });
            table.table().draw();
        });

        //Search Inputs In Form Reset
        $('#kt_reset').on('click', function (e) {
            e.preventDefault();
            $('.kt-input').each(function () {
                $(this).val('');
                table.column($(this).data('col-index')).search('', false, false);
            });
            table.table().draw();
        });
    });

    //Range Apply Function
    $.fn.dataTable.ext.search.push(
        function (settings, data, dataIndex) {
            var min = parseInt($('#start').val(), 10);
            var max = parseInt($('#end').val(), 10);
            var age = parseFloat(data[1]) || 0;

            if ((isNaN(min) && isNaN(max)) ||
                (isNaN(min) && age <= max) ||
                (min <= age && isNaN(max)) ||
                (min <= age && age <= max)) {
                return true;
            }
            return false;
        }
    );
</script>